#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

cd "${BASH_SOURCE%/*}"

CLUSTER_NAME=$(jq -r '.phase1.cluster_name' ../../.config.json)
CLUSTER_DIR=clusters/${CLUSTER_NAME}
TMP_DIR=${CLUSTER_DIR}/.tmp

gen() {
  mkdir -p ${TMP_DIR}
  jsonnet -J ../../ --multi ${TMP_DIR} all.jsonnet
}


deploy() {
  gen
  terraform apply -state=${CLUSTER_DIR}/terraform.tfstate ${TMP_DIR}
  COMMAND="grep '.phase2.kubernetes_version' ../../.config | cut -d '=' -f2 | tr -d '\"'"
  KUBERNETES_VERSION=$(eval $COMMAND)
  # If the kubectl binary doesn't exist download it.
  if [ ! -f /usr/local/bin/kubectl_$KUBERNETES_VERSION ]; then
    echo "Kubectl binary with version - $KUBERNETES_VERSION doesn't exist. So downloading it."
    if wget --spider https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl 2>/dev/null; then
      rm -rf /usr/local/bin/kubectl
      wget https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl -O /usr/local/bin/kubectl_$KUBERNETES_VERSION
      if [ -f /usr/local/bin/kubectl_$KUBERNETES_VERSION ]; then
        chmod +x /usr/local/bin/kubectl_$KUBERNETES_VERSION
        # Create a symbolic link to the kubectl version binary.
        ln -s /usr/local/bin/kubectl_$KUBERNETES_VERSION /usr/local/bin/kubectl
      fi
    else
      echo "Kubectl binary is not available at https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl"
    fi
  else
    echo "Kubectl binary with version - $KUBERNETES_VERSION already exists."
    ln -sf /usr/local/bin/kubectl_$KUBERNETES_VERSION /usr/local/bin/kubectl
  fi
}

destroy() {
  if [[ "${FORCE_DESTROY:-}" == "y" ]]; then
    terraform destroy -state=${CLUSTER_DIR}/terraform.tfstate -force ${TMP_DIR}
  else
    terraform destroy -state=${CLUSTER_DIR}/terraform.tfstate ${TMP_DIR}
  fi
}

execute_host() {
  HOST=$1
  COMMAND=$2
  echo Upgrade master not implemented. >&2
  exit 1
}

master_host() {
  echo Upgrade master not implemented. >&2
  exit 1
}

case "${1:-}" in
  "")
    ;;
  "deploy-cluster")
    deploy
    ;;
  "destroy-cluster")
    destroy
    ;;
  "execute-host")
    execute_host "${@:2}"
    ;;
  "gen")
    gen
    ;;
  "master-host")
    master_host
    ;;
esac
